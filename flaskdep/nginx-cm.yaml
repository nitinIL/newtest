apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
        
        
          events {
            
              }

              http {
              #upgrade required is coming
              proxy_http_version 1.1;

              log_format cus_format 'P_ARG: "$arg_p" - P_UTM: "$arg_utm_source" - BACKENDHOST: "$backend_host" - SCHOST: "$sc_host" - SCHOST2: "$sc_host2"  - REMOTEURL: "$uri" - INGRESS: "$ingress"';
              

              #remote_addr for nonlocalhost
              #split logic 1
              split_clients "${msec}" $sc_host {
                  50%   signup.nwc1.com;
                  50%     signup.nwc2.com;
              }
              
              #split logic 2
              split_clients "${msec}" $sc_host2 {
                  80%   signup.nwc1.com;
                  20%   signup.nwc2.com;
              }

             # use :var1:var2:var3: -> "~^:.*:.*:.*:$"
             # now add conditions for each var
             # if want to match var1 can be 45 or 64 do "~^:(45|64):.*:.*:$"

             # conditional splitting
             if( "$arg_p ")
              map ":$arg_p:$arg_utm_source:" $backend_host{
                      default signup.nwc3.com;
                      "~^:64:.*:$" $sc_host2;
                      "~^:.*:(64|98):$" $sc_host2;
                      "~^:.*:42:$" $sc_host;
                      }
             

              map "$backend_host" $ingress{
                          default 10.133.0.163;
                          signup.nwc1.com 10.133.0.180;
                          signup.nwc2.com 10.133.0.180;
                        }


              server {
                  listen 80;
                  server_name localhost;

                  location / {
                      return 200 "LOCALHOST HOMEPAGE";
                  }
              }

              server {

                  

                  listen 80;
                  server_name signup.nwc.com;

                  set $ingress1 10.133.0.180;
                  set $ingress2 10.133.0.163;
                  
                  if ( $uri = "/static/nwc1"){
                    set $ingress $ingress1;
                    set $backend_host signup.nwc1.com;
                  }

                  if ( $uri = "/static/nwc2"){
                    set $ingress $ingress1;
                    set $backend_host signup.nwc2.com;
                  }

                  if ( $uri = "/static/nwc3"){
                    set $ingress $ingress2;
                    set $backend_host signup.nwc3.com;
                  }

                  location /static/nwc {
                          
                          rewrite /static/.* / break;
                          proxy_pass http://$ingress;
                          proxy_set_header Host $backend_host;
                  
                  }


                  location / {

                     # only go to persistent if splitting occurs else always serve flask 3
                      set $split_host $backend_host;

                      if ($cookie_persistent_backend) {
                          set $backend_host $cookie_persistent_backend;
                      }
                      
                      # split_host = signup.nwc3.com means splitting doesn't occurs
                      if ($split_host = signup.nwc3.com){
                          set $backend_host $split_host;
                      }
                    
                       # no need to set persistent to flask3
                      if ($backend_host != signup.nwc3.com){
                      add_header Set-Cookie "persistent_backend=$backend_host";
                      }

                      proxy_pass http://$ingress;
                      proxy_set_header Host $backend_host;
                      
                      
                  }

                  access_log /var/log/nginx/access.log cus_format;
              }
              }
